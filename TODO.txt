
High-Performance Computing toolbox for Extreme Learning Machine


Test-driven Development:
==================================

Stages:
      I. Single machine basic ELM
     II. Benchmark data with ELM
    III. Multi-machine basic ELM
     IV. Parallel regularization
      V. High-performance solvers
     VI. Other algorithms (OS-ELM)
            MSE for classification?


II. Benchmark data with ELM

    Acceptance tests:
        1. Run benchmark on data from OP-ELM, get similar performance
        *2. Run benchmark on data from OP-ELM, get lower runtime
        *3. Run incremental benchmark on big data, plot runtime graph


    1. Run ELM on all required datasets
        1a. Classification_Iris
        1b. Classification_Pima Indians Diabetes
        1c. Classification_Wine 
        1d. Classification_Wisconsin Breast Cancer
        1e. Regression_Abalone
        1f. Regression_Ailerons
        1g. Regression_Auto price
        1h. Regression_Bank
        1i. Regression_Boston
        1j. Regression_Breast cancer
        1k. Regression_Computer
        1l. Regression_CPU
        1m. Regression_Elevators
        1n. Regression_Servo
        1o. Regression_Stocks


    *2. Limited memory ELM
        *2a. Keep X and H'H in memory, don't keep whole H
        *2b. Add memory consumption limit and calculate batch size from it
        *2c. Out-of-memory ELM - partial loading from HDD with HDF5 


    *3. OP-ELM, MRSR2


    *4. Some kind of cross-validation for variable selection




III. Multi-machine basic ELM

    Acceptance tests:
        *1. Run benchmark on data from OP-ELM, get similar performance
        *2. Run benchmark on data from OP-ELM, get lower runtime
        *3. Run incremental benchmark on big data, plot runtime graph
        *4. Run incremental benchmark with more cores/nodes, plot runtime graph






  




Unit Testing - Work Units


				
				
	3. Distributed ELM (MPI)
				
	    a. Calculate matrix H distributively, get same results			
				
				
		
	2. Save and load ELM model
		a. Get and set ELM model, obtain same results
		b. Save and load ELM model, obtain same results
	
	
	3. OP-ELM
		a. Decrease training error with OP-ELM
	
	4. TROP-ELM (fast and full modes)
	
	5. Solvers and different precision
	
	6. Matlab interface
	
	
	8. Distributed OP-ELM
